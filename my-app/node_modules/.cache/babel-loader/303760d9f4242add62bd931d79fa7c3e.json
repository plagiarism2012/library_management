{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.oneOf = void 0;\n\nconst _ = require(\"lodash\");\n\nconst chain_1 = require(\"../chain\");\n\nconst context_builder_1 = require(\"../context-builder\"); // A dummy context item that gets added to surrogate contexts just to make them run\n\n\nconst dummyItem = {\n  async run() {}\n\n};\n\nfunction oneOf(chains, message) {\n  let result;\n\n  const middleware = async (req, _res, next) => {\n    const surrogateContext = new context_builder_1.ContextBuilder().addItem(dummyItem).build(); // Run each group of chains in parallel, and within each group, run each chain in parallel too.\n\n    const promises = chains.map(async chain => {\n      const group = Array.isArray(chain) ? chain : [chain];\n      const results = await Promise.all(group.map(chain => chain.run(req, {\n        dryRun: true\n      })));\n      const contexts = results.map(result => result.context);\n\n      const groupErrors = _.flatMap(contexts, 'errors'); // #536: The data from a chain within oneOf() can only be made available to e.g. matchedData()\n      // if its entire group is valid.\n\n\n      if (!groupErrors.length) {\n        contexts.forEach(context => {\n          surrogateContext.addFieldInstances(context.getData());\n        });\n      }\n\n      return groupErrors;\n    });\n\n    try {\n      const allErrors = await Promise.all(promises);\n      const success = allErrors.some(groupErrors => groupErrors.length === 0);\n\n      if (!success) {\n        // Only add an error to the context if no group of chains had success.\n        surrogateContext.addError(typeof message === 'function' ? message({\n          req\n        }) : message || 'Invalid value(s)', _.flatMap(allErrors));\n      } // Final context running pass to ensure contexts are added and values are modified properly\n\n\n      result = await new chain_1.ContextRunnerImpl(surrogateContext).run(req);\n      next();\n    } catch (e) {\n      next(e);\n    }\n  };\n\n  const run = async req => {\n    return new Promise((resolve, reject) => {\n      middleware(req, {}, e => {\n        e ? reject(e) : resolve(result);\n      });\n    });\n  };\n\n  return Object.assign(middleware, {\n    run\n  });\n}\n\nexports.oneOf = oneOf;","map":{"version":3,"names":["Object","defineProperty","exports","value","oneOf","_","require","chain_1","context_builder_1","dummyItem","run","chains","message","result","middleware","req","_res","next","surrogateContext","ContextBuilder","addItem","build","promises","map","chain","group","Array","isArray","results","Promise","all","dryRun","contexts","context","groupErrors","flatMap","length","forEach","addFieldInstances","getData","allErrors","success","some","addError","ContextRunnerImpl","e","resolve","reject","assign"],"sources":["E:/library/library_management/node_modules/express-validator/src/middlewares/one-of.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.oneOf = void 0;\r\nconst _ = require(\"lodash\");\r\nconst chain_1 = require(\"../chain\");\r\nconst context_builder_1 = require(\"../context-builder\");\r\n// A dummy context item that gets added to surrogate contexts just to make them run\r\nconst dummyItem = { async run() { } };\r\nfunction oneOf(chains, message) {\r\n    let result;\r\n    const middleware = async (req, _res, next) => {\r\n        const surrogateContext = new context_builder_1.ContextBuilder().addItem(dummyItem).build();\r\n        // Run each group of chains in parallel, and within each group, run each chain in parallel too.\r\n        const promises = chains.map(async (chain) => {\r\n            const group = Array.isArray(chain) ? chain : [chain];\r\n            const results = await Promise.all(group.map(chain => chain.run(req, { dryRun: true })));\r\n            const contexts = results.map(result => result.context);\r\n            const groupErrors = _.flatMap(contexts, 'errors');\r\n            // #536: The data from a chain within oneOf() can only be made available to e.g. matchedData()\r\n            // if its entire group is valid.\r\n            if (!groupErrors.length) {\r\n                contexts.forEach(context => {\r\n                    surrogateContext.addFieldInstances(context.getData());\r\n                });\r\n            }\r\n            return groupErrors;\r\n        });\r\n        try {\r\n            const allErrors = await Promise.all(promises);\r\n            const success = allErrors.some(groupErrors => groupErrors.length === 0);\r\n            if (!success) {\r\n                // Only add an error to the context if no group of chains had success.\r\n                surrogateContext.addError(typeof message === 'function' ? message({ req }) : message || 'Invalid value(s)', _.flatMap(allErrors));\r\n            }\r\n            // Final context running pass to ensure contexts are added and values are modified properly\r\n            result = await new chain_1.ContextRunnerImpl(surrogateContext).run(req);\r\n            next();\r\n        }\r\n        catch (e) {\r\n            next(e);\r\n        }\r\n    };\r\n    const run = async (req) => {\r\n        return new Promise((resolve, reject) => {\r\n            middleware(req, {}, (e) => {\r\n                e ? reject(e) : resolve(result);\r\n            });\r\n        });\r\n    };\r\n    return Object.assign(middleware, { run });\r\n}\r\nexports.oneOf = oneOf;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}