{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.check = void 0;\n\nconst chain_1 = require(\"../chain\");\n\nconst utils_1 = require(\"../utils\");\n\nconst context_builder_1 = require(\"../context-builder\");\n\nfunction check() {\n  let fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let locations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  let message = arguments.length > 2 ? arguments[2] : undefined;\n  const builder = new context_builder_1.ContextBuilder().setFields(Array.isArray(fields) ? fields : [fields]).setLocations(locations).setMessage(message);\n  const runner = new chain_1.ContextRunnerImpl(builder);\n\n  const middleware = async (req, _res, next) => {\n    try {\n      await runner.run(req);\n      next();\n    } catch (e) {\n      next(e);\n    }\n  };\n\n  return Object.assign(middleware, utils_1.bindAll(runner), utils_1.bindAll(new chain_1.SanitizersImpl(builder, middleware)), utils_1.bindAll(new chain_1.ValidatorsImpl(builder, middleware)), utils_1.bindAll(new chain_1.ContextHandlerImpl(builder, middleware)), {\n    builder\n  });\n}\n\nexports.check = check;","map":{"version":3,"names":["Object","defineProperty","exports","value","check","chain_1","require","utils_1","context_builder_1","fields","locations","message","builder","ContextBuilder","setFields","Array","isArray","setLocations","setMessage","runner","ContextRunnerImpl","middleware","req","_res","next","run","e","assign","bindAll","SanitizersImpl","ValidatorsImpl","ContextHandlerImpl"],"sources":["E:/library/library_management/node_modules/express-validator/src/middlewares/check.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.check = void 0;\r\nconst chain_1 = require(\"../chain\");\r\nconst utils_1 = require(\"../utils\");\r\nconst context_builder_1 = require(\"../context-builder\");\r\nfunction check(fields = '', locations = [], message) {\r\n    const builder = new context_builder_1.ContextBuilder()\r\n        .setFields(Array.isArray(fields) ? fields : [fields])\r\n        .setLocations(locations)\r\n        .setMessage(message);\r\n    const runner = new chain_1.ContextRunnerImpl(builder);\r\n    const middleware = async (req, _res, next) => {\r\n        try {\r\n            await runner.run(req);\r\n            next();\r\n        }\r\n        catch (e) {\r\n            next(e);\r\n        }\r\n    };\r\n    return Object.assign(middleware, utils_1.bindAll(runner), utils_1.bindAll(new chain_1.SanitizersImpl(builder, middleware)), utils_1.bindAll(new chain_1.ValidatorsImpl(builder, middleware)), utils_1.bindAll(new chain_1.ContextHandlerImpl(builder, middleware)), { builder });\r\n}\r\nexports.check = check;\r\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,KAAR,GAAgB,KAAK,CAArB;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,oBAAD,CAAjC;;AACA,SAASF,KAAT,GAAqD;EAAA,IAAtCK,MAAsC,uEAA7B,EAA6B;EAAA,IAAzBC,SAAyB,uEAAb,EAAa;EAAA,IAATC,OAAS;EACjD,MAAMC,OAAO,GAAG,IAAIJ,iBAAiB,CAACK,cAAtB,GACXC,SADW,CACDC,KAAK,CAACC,OAAN,CAAcP,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,CADhC,EAEXQ,YAFW,CAEEP,SAFF,EAGXQ,UAHW,CAGAP,OAHA,CAAhB;EAIA,MAAMQ,MAAM,GAAG,IAAId,OAAO,CAACe,iBAAZ,CAA8BR,OAA9B,CAAf;;EACA,MAAMS,UAAU,GAAG,OAAOC,GAAP,EAAYC,IAAZ,EAAkBC,IAAlB,KAA2B;IAC1C,IAAI;MACA,MAAML,MAAM,CAACM,GAAP,CAAWH,GAAX,CAAN;MACAE,IAAI;IACP,CAHD,CAIA,OAAOE,CAAP,EAAU;MACNF,IAAI,CAACE,CAAD,CAAJ;IACH;EACJ,CARD;;EASA,OAAO1B,MAAM,CAAC2B,MAAP,CAAcN,UAAd,EAA0Bd,OAAO,CAACqB,OAAR,CAAgBT,MAAhB,CAA1B,EAAmDZ,OAAO,CAACqB,OAAR,CAAgB,IAAIvB,OAAO,CAACwB,cAAZ,CAA2BjB,OAA3B,EAAoCS,UAApC,CAAhB,CAAnD,EAAqHd,OAAO,CAACqB,OAAR,CAAgB,IAAIvB,OAAO,CAACyB,cAAZ,CAA2BlB,OAA3B,EAAoCS,UAApC,CAAhB,CAArH,EAAuLd,OAAO,CAACqB,OAAR,CAAgB,IAAIvB,OAAO,CAAC0B,kBAAZ,CAA+BnB,OAA/B,EAAwCS,UAAxC,CAAhB,CAAvL,EAA6P;IAAET;EAAF,CAA7P,CAAP;AACH;;AACDV,OAAO,CAACE,KAAR,GAAgBA,KAAhB"},"metadata":{},"sourceType":"script"}