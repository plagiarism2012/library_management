{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContextRunnerImpl = exports.ResultWithContext = void 0;\n\nconst _ = require(\"lodash\");\n\nconst base_1 = require(\"../base\");\n\nconst context_1 = require(\"../context\");\n\nconst select_fields_1 = require(\"../select-fields\");\n\nconst validation_result_1 = require(\"../validation-result\");\n\nclass ResultWithContext extends validation_result_1.Result {\n  constructor(context) {\n    super(error => error, context.errors);\n    this.context = context;\n  }\n\n}\n\nexports.ResultWithContext = ResultWithContext;\n\nclass ContextRunnerImpl {\n  constructor(builderOrContext) {\n    let selectFields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : select_fields_1.selectFields;\n    this.builderOrContext = builderOrContext;\n    this.selectFields = selectFields;\n  }\n\n  async run(req) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const context = this.builderOrContext instanceof context_1.Context ? this.builderOrContext : this.builderOrContext.build();\n    const instances = this.selectFields(req, context.fields, context.locations);\n    context.addFieldInstances(instances);\n    const haltedInstances = new Set();\n\n    for (const contextItem of context.stack) {\n      const promises = context.getData({\n        requiredOnly: true\n      }).map(async instance => {\n        const {\n          location,\n          path\n        } = instance;\n        const instanceKey = `${location}:${path}`;\n\n        if (haltedInstances.has(instanceKey)) {\n          return;\n        }\n\n        try {\n          await contextItem.run(context, instance.value, {\n            req,\n            location,\n            path\n          }); // An instance is mutable, so if an item changed its value, there's no need to call getData again\n\n          const newValue = instance.value; // Checks whether the value changed.\n          // Avoids e.g. undefined values being set on the request if it didn't have the key initially.\n\n          const reqValue = path !== '' ? _.get(req[location], path) : req[location];\n\n          if (!options.dryRun && reqValue !== instance.value) {\n            path !== '' ? _.set(req[location], path, newValue) : _.set(req, location, newValue);\n          }\n        } catch (e) {\n          if (e instanceof base_1.ValidationHalt) {\n            haltedInstances.add(instanceKey);\n            return;\n          }\n\n          throw e;\n        }\n      });\n      await Promise.all(promises);\n    }\n\n    if (!options.dryRun) {\n      const internalReq = req;\n      internalReq[base_1.contextsKey] = (internalReq[base_1.contextsKey] || []).concat(context);\n    }\n\n    return new ResultWithContext(context);\n  }\n\n}\n\nexports.ContextRunnerImpl = ContextRunnerImpl;","map":{"version":3,"names":["Object","defineProperty","exports","value","ContextRunnerImpl","ResultWithContext","_","require","base_1","context_1","select_fields_1","validation_result_1","Result","constructor","context","error","errors","builderOrContext","selectFields","run","req","options","Context","build","instances","fields","locations","addFieldInstances","haltedInstances","Set","contextItem","stack","promises","getData","requiredOnly","map","instance","location","path","instanceKey","has","newValue","reqValue","get","dryRun","set","e","ValidationHalt","add","Promise","all","internalReq","contextsKey","concat"],"sources":["E:/library/library_management/node_modules/express-validator/src/chain/context-runner-impl.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ContextRunnerImpl = exports.ResultWithContext = void 0;\r\nconst _ = require(\"lodash\");\r\nconst base_1 = require(\"../base\");\r\nconst context_1 = require(\"../context\");\r\nconst select_fields_1 = require(\"../select-fields\");\r\nconst validation_result_1 = require(\"../validation-result\");\r\nclass ResultWithContext extends validation_result_1.Result {\r\n    constructor(context) {\r\n        super(error => error, context.errors);\r\n        this.context = context;\r\n    }\r\n}\r\nexports.ResultWithContext = ResultWithContext;\r\nclass ContextRunnerImpl {\r\n    constructor(builderOrContext, selectFields = select_fields_1.selectFields) {\r\n        this.builderOrContext = builderOrContext;\r\n        this.selectFields = selectFields;\r\n    }\r\n    async run(req, options = {}) {\r\n        const context = this.builderOrContext instanceof context_1.Context\r\n            ? this.builderOrContext\r\n            : this.builderOrContext.build();\r\n        const instances = this.selectFields(req, context.fields, context.locations);\r\n        context.addFieldInstances(instances);\r\n        const haltedInstances = new Set();\r\n        for (const contextItem of context.stack) {\r\n            const promises = context.getData({ requiredOnly: true }).map(async (instance) => {\r\n                const { location, path } = instance;\r\n                const instanceKey = `${location}:${path}`;\r\n                if (haltedInstances.has(instanceKey)) {\r\n                    return;\r\n                }\r\n                try {\r\n                    await contextItem.run(context, instance.value, {\r\n                        req,\r\n                        location,\r\n                        path,\r\n                    });\r\n                    // An instance is mutable, so if an item changed its value, there's no need to call getData again\r\n                    const newValue = instance.value;\r\n                    // Checks whether the value changed.\r\n                    // Avoids e.g. undefined values being set on the request if it didn't have the key initially.\r\n                    const reqValue = path !== '' ? _.get(req[location], path) : req[location];\r\n                    if (!options.dryRun && reqValue !== instance.value) {\r\n                        path !== '' ? _.set(req[location], path, newValue) : _.set(req, location, newValue);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    if (e instanceof base_1.ValidationHalt) {\r\n                        haltedInstances.add(instanceKey);\r\n                        return;\r\n                    }\r\n                    throw e;\r\n                }\r\n            });\r\n            await Promise.all(promises);\r\n        }\r\n        if (!options.dryRun) {\r\n            const internalReq = req;\r\n            internalReq[base_1.contextsKey] = (internalReq[base_1.contextsKey] || []).concat(context);\r\n        }\r\n        return new ResultWithContext(context);\r\n    }\r\n}\r\nexports.ContextRunnerImpl = ContextRunnerImpl;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}